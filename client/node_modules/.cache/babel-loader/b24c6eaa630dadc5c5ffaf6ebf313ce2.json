{"ast":null,"code":"var _jsxFileName = \"/Users/md.pappumiahn/Documents/Dev/link_shorten/client/src/components/UrlSorten.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport validator from \"validator\";\nimport copy from \"copy-text-to-clipboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UrlSorten = () => {\n  _s();\n\n  const inputRef = useRef(null);\n  const [shortenURLs, setShortenURLs] = useState([]);\n  const [inputText, setInput] = useState(\"\"); // '' is the initial state value\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [isCopy, setCopy] = useState(\"\");\n  const baseUrl = \"http://localhost:3000/\";\n  useEffect(() => {\n    // Get all shorted link list\n    axios.get(\"http://localhost:4000/allShortenUrls\").then(res => {\n      console.log(\" res.data\", res.data);\n      const {\n        shortenUrls\n      } = res.data || [];\n      setShortenURLs(shortenUrls);\n    });\n  }, [shortenURLs]);\n\n  const handelShortenUrl = e => {\n    let url = inputText;\n    let isValidDomain = validator.isURL(url, {\n      require_valid_protocol: false\n    }); // Domain validation check\n\n    if (!url || !isValidDomain) {\n      setErrMsg(\"Please, provide a valid url\");\n      destroyNotification(true, setErrMsg);\n    } else {\n      axios.post(\"http://localhost:4000/generateShortenUrl\", {\n        url\n      }).then(res => {\n        const {\n          slug\n        } = res.data;\n\n        if (slug) {\n          setInput(baseUrl + slug);\n          setCopy(true);\n        }\n      });\n    }\n  }; // Copied input text\n\n\n  const handelCopyShortenUrl = e => {\n    inputRef.current.select();\n    copy(inputText);\n  }; // Copied short link url\n\n\n  const handelCopyShortenLink = id => {\n    let text = document.getElementById(\"616e87fa4aa6f85cbaba63f5\").innerText;\n    copy(text);\n  }; // Destroy error notification\n\n\n  const destroyNotification = (isError, setErrMsg) => {\n    if (isError) {\n      setTimeout(function () {\n        setErrMsg(\"\");\n      }, 2000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Generate Short Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef,\n          className: \"form-control sorten-link\",\n          placeholder: \"Shorten your link\",\n          onInput: e => setInput(e.target.value),\n          value: inputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), isCopy ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary shorten-btn\",\n          onClick: handelCopyShortenUrl,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary shorten-btn\",\n          onClick: handelShortenUrl,\n          children: \"Shorten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), errMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-20\",\n        role: \"alert\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: shortenURLs.map((shortenURL, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row url-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6\",\n              children: shortenURL.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"mr-20\",\n                href: baseUrl + shortenURL.slug,\n                id: shortenURL._id,\n                target: \"_blank\",\n                children: [baseUrl, shortenURL.slug]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: () => handelCopyShortenLink(shortenURL._id),\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UrlSorten, \"wkNNWHcHdGqIQGplITwKKJOrit0=\");\n\n_c = UrlSorten;\nexport default UrlSorten;\n\nvar _c;\n\n$RefreshReg$(_c, \"UrlSorten\");","map":{"version":3,"sources":["/Users/md.pappumiahn/Documents/Dev/link_shorten/client/src/components/UrlSorten.js"],"names":["React","useState","useEffect","useRef","axios","validator","copy","UrlSorten","inputRef","shortenURLs","setShortenURLs","inputText","setInput","errMsg","setErrMsg","isCopy","setCopy","baseUrl","get","then","res","console","log","data","shortenUrls","handelShortenUrl","e","url","isValidDomain","isURL","require_valid_protocol","destroyNotification","post","slug","handelCopyShortenUrl","current","select","handelCopyShortenLink","id","text","document","getElementById","innerText","isError","setTimeout","target","value","map","shortenURL","index","_id"],"mappings":"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","sourcesContent":["import { React, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport validator from \"validator\";\nimport copy from \"copy-text-to-clipboard\";\n\nconst UrlSorten = () => {\n  const inputRef = useRef(null);\n  const [shortenURLs, setShortenURLs] = useState([]);\n  const [inputText, setInput] = useState(\"\"); // '' is the initial state value\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [isCopy, setCopy] = useState(\"\");\n  const baseUrl = \"http://localhost:3000/\";\n\n  useEffect(() => {\n    // Get all shorted link list\n    axios.get(\"http://localhost:4000/allShortenUrls\").then((res) => {\n      console.log(\" res.data\", res.data);\n      const { shortenUrls } = res.data || [];\n      setShortenURLs(shortenUrls);\n    });\n  }, [shortenURLs]);\n\n  const handelShortenUrl = (e) => {\n    let url = inputText;\n    let isValidDomain = validator.isURL(url, { require_valid_protocol: false }); // Domain validation check\n\n    if (!url || !isValidDomain) {\n      setErrMsg(\"Please, provide a valid url\");\n      destroyNotification(true, setErrMsg);\n    } else {\n      axios\n        .post(\"http://localhost:4000/generateShortenUrl\", { url })\n        .then((res) => {\n          const { slug } = res.data;\n          if (slug) {\n            setInput(baseUrl + slug);\n            setCopy(true);\n          }\n        });\n    }\n  };\n\n  // Copied input text\n  const handelCopyShortenUrl = (e) => {\n    inputRef.current.select();\n    copy(inputText);\n  };\n\n  // Copied short link url\n  const handelCopyShortenLink = (id) => {\n    let text = document.getElementById(\"616e87fa4aa6f85cbaba63f5\").innerText;\n    copy(text);\n  };\n\n  // Destroy error notification\n  const destroyNotification = (isError, setErrMsg) => {\n    if (isError) {\n      setTimeout(function () {\n        setErrMsg(\"\");\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1 className=\"page-title\">Generate Short Link</h1>\n      </div>\n      <div className=\"form-row align-items-center\">\n        <div className=\"col-auto\">\n          <input\n            type=\"text\"\n            ref={inputRef}\n            className=\"form-control sorten-link\"\n            placeholder=\"Shorten your link\"\n            onInput={(e) => setInput(e.target.value)}\n            value={inputText}\n          />\n          {isCopy ? (\n            <button\n              className=\"btn btn-primary shorten-btn\"\n              onClick={handelCopyShortenUrl}\n            >\n              Copy\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-primary shorten-btn\"\n              onClick={handelShortenUrl}\n            >\n              Shorten\n            </button>\n          )}\n        </div>\n        {errMsg && (\n          <div className=\"alert alert-danger mt-20\" role=\"alert\">\n            {errMsg}\n          </div>\n        )}\n        <div className=\"card mt-20\">\n          <div className=\"card-body\">\n            {shortenURLs.map((shortenURL, index) => (\n              <div className=\"row url-row\" key={index}>\n                <div className=\"col-sm-6\">{shortenURL.url}</div>\n                <div className=\"col-sm-6 text-right\">\n                  <a\n                    className=\"mr-20\"\n                    href={baseUrl + shortenURL.slug}\n                    id={shortenURL._id}\n                    target=\"_blank\"\n                  >\n                    {baseUrl}\n                    {shortenURL.slug}\n                  </a>\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => handelCopyShortenLink(shortenURL._id)}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UrlSorten;\n"]},"metadata":{},"sourceType":"module"}